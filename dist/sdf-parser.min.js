/** sdf-parser@3.1.0, MIT licensed. https://github.com/cheminfo-js/sdf-parser */
!function(e,r){"object"==typeof exports&&"object"==typeof module?module.exports=r():"function"==typeof define&&define.amd?define([],r):"object"==typeof exports?exports.SDFParser=r():e.SDFParser=r()}("undefined"!=typeof self?self:this,function(){return function(e){var r={};function t(n){if(r[n])return r[n].exports;var i=r[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,t),i.l=!0,i.exports}return t.m=e,t.c=r,t.d=function(e,r,n){t.o(e,r)||Object.defineProperty(e,r,{configurable:!1,enumerable:!0,get:n})},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,"a",r),r},t.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},t.p="",t(t.s=0)}([function(e,r,t){"use strict";var n=t(1),i=t(2);e.exports=n,n.stream=i},function(e,r,t){"use strict";e.exports=function(e,r={}){var t=r.include,n=r.exclude,i=r.filter,o=r.modifiers,f=void 0===o?{}:o,a=r.forEach,s=void 0===a?{}:a,u=r.dynamicTyping,l=void 0===u||u;if("string"!=typeof e)throw new TypeError('Parameter "sdf" must be a string');var c="\n";if(r.mixedEOL)e=(e=e.replace(/\r\n/g,"\n")).replace(/\r/g,"\n");else{var p=e.substr(0,1e3);p.indexOf("\r\n")>-1?c="\r\n":p.indexOf("\r")>-1&&(c="\r")}for(var d=e.split(new RegExp(c+"\\$\\$\\$\\$.*"+c)),m=[],x={},v=Date.now(),g=0;g<d.length;g++){var h=d[g].split(c+">");if(h.length>0&&h[0].length>5){var y={},b=[];y.molfile=h[0]+c;for(var O=1;O<h.length;O++){var w=h[O].split(c),j=w[0].indexOf("<"),V=w[0].indexOf(">"),E=w[0].substring(j+1,V);if(b.push(E),x[E]||(x[E]={counter:0,isNumeric:l,keep:!1},n&&-1!==n.indexOf(E)||t&&!(t.indexOf(E)>-1)||(x[E].keep=!0,f[E]&&(x[E].modifier=f[E]),s[E]&&(x[E].forEach=s[E]))),x[E].keep){for(var P=1;P<w.length-1;P++)y[E]?y[E]+=c+w[P]:y[E]=w[P];if(x[E].modifier){var k=x[E].modifier(y[E]);void 0===k||null===k?delete y[E]:y[E]=k}x[E].isNumeric&&(isFinite(y[E])&&!y[E].match(/^0[0-9]/)||(x[E].isNumeric=!1))}}if(!i||i(y))for(m.push(y),O=0;O<b.length;O++){var D=b[O];x[D].counter++}}}for(E in x)if((D=x[E]).isNumeric)for(D.minValue=1/0,D.maxValue=-1/0,O=0;O<m.length;O++)if(m[O][E]){var F=parseFloat(m[O][E]);m[O][E]=F,F>D.maxValue&&(D.maxValue=F),F<D.minValue&&(D.minValue=F)}for(var N in x)x[N].counter===m.length?x[N].always=!0:x[N].always=!1;var $=[];for(N in x){var S=x[N];S.label=N,$.push(S)}return{time:Date.now()-v,molecules:m,labels:Object.keys(x),statistics:$}}},function(e,r,t){"use strict";e.exports={}}])});
//# sourceMappingURL=sdf-parser.min.js.map