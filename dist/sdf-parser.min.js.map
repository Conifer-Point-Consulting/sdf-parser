{"version":3,"sources":["sdf-parser.min.js"],"names":["e","exports","module","define","amd","f","window","global","self","SDFParser","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"parse","sdf","TypeError","header","substr","crlf","indexOf","sdfPart","parts","molecule","j","jj","lines","from","to","label","k","kk","sdfParts","split","molecules","labels","start","Date","now","ii","push","molfile","type","value","substring","counter","isNumeric","isFinite","currentLabel","minValue","Infinity","maxValue","parseFloat","key","always","statistics","statistic","time","Object","keys"],"mappings":"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","file":"sdf-parser.min.js","sourcesContent":["// sdf-parser@v1.0.0, MIT licensed. https://github.com/cheminfo/sdf-parser\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var r;\"undefined\"!=typeof window?r=window:\"undefined\"!=typeof global?r=global:\"undefined\"!=typeof self&&(r=self),r.SDFParser=e()}}(function(){return function e(r,n,i){function t(f,u){if(!n[f]){if(!r[f]){var l=\"function\"==typeof require&&require;if(!u&&l)return l(f,!0);if(o)return o(f,!0);var a=new Error(\"Cannot find module '\"+f+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var s=n[f]={exports:{}};r[f][0].call(s.exports,function(e){var n=r[f][1][e];return t(n?n:e)},s,s.exports,e,r,n,i)}return n[f].exports}for(var o=\"function\"==typeof require&&require,f=0;f<i.length;f++)t(i[f]);return t}({1:[function(e,r){\"use strict\";function n(e){var r=e.substr(0,1e3),n=\"\\n\";r.indexOf(\"\\r\\n\")>-1?n=\"\\r\\n\":r.indexOf(\"\\r\")>-1&&(n=\"\\r\");for(var i,t,o,f,u,l,a,s,c,d,p,m=e.split(n+\"$$$$\"+n),v=[],x={},g=Date.now(),h=0,y=m.length;y>h;h++)if(i=m[h],t=i.split(n+\">\"),t.length>0&&t[0].length>5)for(o={},v.push(o),o.molfile={type:\"mol2d\",value:t[0]+n},u=t.length,f=1;u>f;f++){for(l=t[f].split(n),a=l[0].indexOf(\"<\"),s=l[0].indexOf(\">\"),c=l[0].substring(a+1,s),x[c]?x[c].counter++:x[c]={counter:1,isNumeric:!0},p=l.length-1,d=1;p>d;d++)o[c]?o[c]+=n+l[d]:o[c]=l[d];x[c].isNumeric&&(isFinite(o[c])||(x[c].isNumeric=!1))}for(var c in x){var b=x[c];if(b.isNumeric){b.minValue=Number.MAX_VALUE,b.maxValue=Number.MIN_VALUE;for(var f=0;f<v.length;f++)if(v[f][c]){var w=parseFloat(v[f][c]);v[f][c]=w,w>b.maxValue&&(b.maxValue=w),w<b.minValue&&(b.minValue=w)}}}for(var N in x)x[N].always=x[N].counter==v.length?!0:!1;var O=[];for(var N in x){var V=x[N];V.label=N,O.push(V)}return{time:Date.now()-g,molecules:v,labels:Object.keys(x),statistics:O}}r.exports=n},{}]},{},[1])(1)});\n//# sourceMappingURL=sdf-parser.min.js.map"],"sourceRoot":"/source/"}